package com.interviewprep.java8;

import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class ProducerConsumerLambdaExpr {
	 static int taken=-1;

		public static void main(String[] args)
		{

			BlockingQueue<Integer> bqueue
				= new ArrayBlockingQueue<Integer>(4);
			
			 

			producer p1 = new producer(bqueue);
			consumer c1 = new consumer(bqueue);

			Thread pThread = new Thread(() -> {
					for (int i = 1; i <= 4; i++) {
						try {
							bqueue.put(i);
							System.out.println("Produced " + i);
						}
						catch (InterruptedException e) {
							e.printStackTrace();
						}
					}});
			Thread cThread = new Thread(() -> {
					while (taken != 4) {
						try {
							taken = bqueue.take();
							System.out.println("Consumed " + taken);
						}
						catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
					
				});

			pThread.start();
			cThread.start();
		}
	}
