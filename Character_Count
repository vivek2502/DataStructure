import java.io.*;
import java.util.*;
class OccurenceOfCharInString {
    static void characterCount(String inputString)
    {
        // Creating a HashMap containing char
        // as a key and occurrences as  a value
        HashMap<Character, Integer> charCountMap
            = new HashMap<Character, Integer>();
 
        // Converting given string to char array
 
        char[] strArray = inputString.toCharArray();
 
        // checking each char of strArray
        for (char c : strArray) {
            if (charCountMap.containsKey(c)) {
 
                // If char is present in charCountMap,
                // incrementing it's count by 1
                charCountMap.put(c, charCountMap.get(c) + 1);
            }
            else {
 
                // If char is not present in charCountMap,
                // putting this char to charCountMap with 1 as it's value
                charCountMap.put(c, 1);
            }
        }
 
        // Printing the charCountMap
		//hm.entrySet() is used to retrieve all the key-value pairs called Map.Entries and stores internally into a set
        for (Map.Entry entry : charCountMap.entrySet()) {
            System.out.println(entry.getKey() + " " + entry.getValue());
        }
    }
 
    // Driver Code
    public static void main(String[] args)
    {
        String str = "Ajit";
        characterCount(str);
    }
}
=======================================================================================
import java.util.*;

public class Demo  {
  
  public static void main(String args[]){
    
    
    String str="vivek";
    char  []data=str.toCharArray();
    
  HashMap<Character,Integer> h=new HashMap<>();
  for(char c: data){
    if(h.containsKey(c))
      h.put(c,h.get(c)+1);
    else
      h.put(c,1);
  }
  TreeMap<Character,Integer> t=new TreeMap<>();
  t.putAll(h);
  for(Map.Entry m : t.entrySet())
    System.out.println(m.getKey()+" "+m.getValue());
  }
  
}